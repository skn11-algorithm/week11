# 14500번 테트로미노

# 입력
# - 첫쨰 줄: 종이의 세로 크기 N, 가로 크기 M
# - 둘째 줄부터 N+2줄까지: M개의 가로에 쓰여진 수 

# 출력
# - 테트로미노가 놓은 칸에 쓰인 수들의 합의 최대

# 문제
# - 폴리오미노는 크기가 1x1인 정사각형을 여러 개 이어 붙인 도형
# - 조건
#   - 정사각형은 서로 겹치면 x
#   - 도형은 모두 연결되어 있어야 함
#   - 정사각형의 변끼리 연결되어 있어야 함 (즉, 꼭짓점이 맞닿아 있는건 폴리오미노가 아님)
# - 정사각형 4개를 붙인건 테트로미노
# - 테트로미노 하나를 적절히 놓아 테트로미노가 놓인 칸에 쓰여져 있는 수들의 합을 최대로 하는 프로그램

# 아이디어
# - 제일 큰 숫자부터 시작하는게 좋을거같은데... 일단 brute force로 간다
# 기준
# (1) 1x4, 4x1 -> 2가지
# (2) 2x2 -> 1가지
# (3) z모양 -> 4가지
# (4) L모양 -> 8가지
# (5) T모양 -> 4가지

import sys
input = sys.stdin.readline

tets = [
    [(0,1),(0,2),(0,3)], [(1,0),(2,0),(3,0)],
    [(1,0),(1,1),(0,1)],
    [(0,-1),(1,-1),(1,-2)], [(0,1),(1,1),(1,2)], [(1,0),(1,1),(2,1)],[(-1,0),(-1,1),(-2,1)],
    [(0,-1),(0,-2),(1,-2)], [(0,-1),(0,-2),(-1,-2)], [(-1,0),(-2,0),(-2,-1)], [(1,0),(2,0),(2,-1)],
    [(0,1),(0,2),(1,2)], [(0,1),(0,2),(-1,2)],[(-1,0),(-2,0),(-2,1)], [(1,0),(2,0),(2,1)],
    [(-1,-1),(0,-1),(1,-1)], [(-1,1),(0,1),(1,1)], [(-1,1),(-1,0),(-1,-1)], [(1,1),(1,0),(1,-1)]
]

def calc(arr, x, y, tet):
    temp = arr[i][j]
    for dx, dy in tet:
        nx = x + dx
        ny = y + dy
        
        if 0 <= nx < n and 0 <= ny < m:
            temp += arr[nx][ny]
        else:
            return 0
    return temp


if __name__=='__main__':
    global n,m
    n,m = map(int, input().split())
    arr = [list(map(int, input().split())) for _ in range(n)]
    
    ans = 0
    for i in range(n):
        for j in range(m):
            for tet in tets:
                temp = calc(arr, i, j, tet)
                ans = max(temp, ans)
                
    print(ans)

    
